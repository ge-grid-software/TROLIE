# Copyright 2023 General Electric Company and/or its affiliates (“GE”). 
# Copyright 2023 Midcontinent Independent System Operator, Inc.

# This specification is distributed under the Apache Software License version 2.0, 
# as specified at https://github.com/ge-grid-software/TROLIE/blob/main/LICENSE


openapi: '3.0.3'
info:
  title: Transmission Facility Ratings and Operating Limits Information Exchange (TROLIE)
  description: |
    Pursuant to FERC Order 881, Transmission Providers are required to support
    Ambient Adjusted Ratings (AARs) for most Transmission Facilities in their footprint.  
    
    In this context, Transmission Providers refers roughly to the FERC definition of Transmission 
    Provider as any public utility that owns, operates, or controls facilities used for the
    transmission of electric energy in interstate commerce.  This could be said to apply to any entity that operates the transmission grid, including ISOs.  
    
    For the purpose of this API, Transmission Provider may be assumed to be more generic- it is 
    really any entity that can recieve AARs.  

    This API specification supports the information exchange necessary to
    coordinate forecasted and base facility ratings between a Transmission Provider
    and Ratings Providers. 

    The Transmission Provider is assumed to be the host of this information exchange.

    A Ratings Provider is defined by this specification to be any entity that
    has pre-coordinated with the Transmission Provider hosting this information exchange
    to be the entity responsible for providing AARs on some set of Transmission Facilities
    known to the Transmission Provider. That pre-coordination is out-of-scope for
    this specification.

    The language of this API makes a strict distinction between the terms rating and limit.  
    A limit is a validated value that is actively used to make operational decisions on the power grid.  
    This could be limits used by the EMS or real-time market in real-time, or it could be forecast limits 
    used by look-ahead processes such as EMS study applications or the day-ahead market. 
    A rating, in contrast, is a calculated value from some process that is input to TROLIE 
    (and by extension operating power systems at large) and may be selected for use as a 
    limit after validation and dependent on operating conditions, timeframe and the operational 
    decisions being made.  Seasonal ratings, forecast rating submittals, and real-time rating submittals are all examples of ratings.  

    <img src="images/TROLIE interactions.svg" alt="TROLIE Interactions" />

    <b>HAL / HATEOAS Link Conventions</b>

    This API makes significant use of the REST HATEOAS pattern, using HAL conventions.  This means that relationships between resources
    are provided through links, which are navigable through GET requests.  On submittal (POST or PUT requests), this may be confusing when a particular
    relationship must be provided by the client.  Clients should populate these links on submital, but may assume that the paths are relative, and only the href
    needing to be populated.  As shown in the example in `createMonitoringSet`, `line2` may be added to the monitoring set by setting 
    the href = /reference-data/transmission-facilities/line2  

  version: '0.1.0-wip'
  contact: 
    name: Tory McKeag
    email: tory.mckeag@ge.com
    url: https://www.ge.com/digital/applications/grid-orchestration-software
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://no-server/trolie
tags:
  - name: Monitoring Sets
    description: | 
      Monitoring sets are arbitrarily defined sets of network components, both segments and transmission facilities, 
      that may be used to filter ratings and limits returned by queries against this API.  These are stored sets that may be defined
      arbitrarily by users of the API, so long as those users have permission to view relevant components.  

  - name: Operating Snapshots
    description: |
      Two snapshots are provided:
      * **Operating Limits Forecast Snapshot** is the forecast of Transmission
        Facility ratings that is in-use by the Transmission Provider at the time
        of the request for this resource.  These are actively used for look-ahead operational decisions, such as the
        day-ahead market, in addition to their role as recourse limits if real-time ratings
        proposals are missing.  
      * **Operating Limits Real-Time Snapshot** is the set of System Operating Limits the
        Transmission Provider is operating to at the time of the request for
        this resource.  

  - name: Rating Proposals
    description: |
      Ratings Providers may submit ratings for three separate time horizons:
      * **Forecast Ratings** are at minimum hourly forecasts of ratings for a particular segment.  
      * **Real-Time Ratings** are provided for current operating conditions.  Ratings provided in this manner
        are an alternative for segments where ICCP communications are not available.  
      * **Seasonal Recourse Ratings** are recourse ratings for when applicable forecast ratings are not available.  
        This includes ratings for scheduled calendar seasons, as well as to rating sets that apply in special named 
        scenarios defined by the Transmission Provider, such as an extreme winter day.  

  - name: Recourse Rating Snapshots
    description: |
      While not typically used directly in operational decisions, recourse ratings are provided for two purposes:
      1.  They are used when applicable forecast ratings are not available.  
      2.  They may be used in future-looking studies that look out (potentially far) beyond the time 
          window where forecast ratings are available.  
      A snapshot is provided of the resource ratings configured by the system, as well as their relationship to upcoming seasons.  

  - name: Reference Data
    description: | 
      Reference to sets of data that are referenced by ratings, limits and monitoring sets.  This includes:
      * List of segments and transmission facilities defined in TROLIE's network model.  
      * From an IEC CIM perspective, the list of GeographicalRegions and SubGeographicalRegions defined in the model, and their 
        association to transmission facilities and segments.  
      * A list of supported seasons.  
      * A list of supported limit types.  
      * A list of supported naming schemes.  
paths:
  /limits/forecast-snapshot:
    get:
      operationId: getLimitsForecastSnapshot
      description: >
        Obtain the Limits Forecast the Transmission Provider is currently using in Operations, 
        relative to the current time.  
        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/facility-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'        
      responses: &forecastSnapshotReadResponses
        "200": 
          description: >
            The requested operating forecast snapshot is returned.
          content:
            application/vnd.trolie.forecast-limit-set.v1+json:
              schema:
                $ref: '#/components/schemas/forecast-limit-set'
              example:
                _links:
                  self: 
                    href: /limits/forecast-snapshot
                total-count: 1
                offset: 0
                _embedded:
                  forecasts:
                  - _links:
                      provenant-proposals:
                      - href: /rating-proposals/forecasts/12345
                      transmission-facility:
                        href: /reference-data/transmission-facilities/line2
                        name: line2
                    periods:
                    - period-start: "2023-07-12T16:00:00-07:00"
                      updated-time: "2023-07-12T13:05:43.044267100-07:00"
                      values: 
                      - type: normal
                        value:
                          mva: 160
                      - type: emergency
                        value:
                          mva: 165
                      - type: loadshed
                        value:
                          mva: 170
            application/json:
              schema:
                $ref: '#/components/schemas/forecast-limit-set'
                        
                    
                              
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'
            ETag:
              $ref: '#/components/headers/ETag'
        "304": &common304
          $ref: '#/components/responses/not-modified'
        "400": &query400
          description: >
            Malformed request, based on misuse of filters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation-messages'
            application/vnd.trolie.validation-messages.v1+json:
              schema:
                $ref: '#/components/schemas/validation-messages'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
        "401": &common401
          $ref: '#/components/responses/unauthorized'
        "403": &common403
          $ref: '#/components/responses/forbidden'
        "404": &common404
          $ref: '#/components/responses/no-data-found'          
        "406": &common406
          $ref: '#/components/responses/not-acceptable'
        "410": &common410
          $ref: '#/components/responses/archived'          
        "429": &common429
          $ref: '#/components/responses/rate-limited'
        default: &commonDefaultErr
          $ref: '#/components/responses/unexpected-error'
      security: &snapshotReadSecurity
        - oauth2-primary-flow:
          - "read:operating-snapshot"
    head:
      operationId: getLimitsForecastSnapshotHeader
      description: >
        Use to obtain the headers that would be returned for 
        `getLimitsForecastSnapshot`. Useful for cache invalidation.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/facility-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'        
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'        
      responses: &headResponses
        "200": 
          description: OK
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        "304": 
          $ref: '#/components/responses/not-modified'
        "400": *query400
        "401": 
          $ref: '#/components/responses/unauthorized-head'
        "403": 
          $ref: '#/components/responses/forbidden-head'
        "404": 
          $ref: '#/components/responses/no-data-found-head'          
        "406": 
          $ref: '#/components/responses/not-acceptable-head'
        "410":
          $ref: '#/components/responses/archived'
        "429": 
          $ref: '#/components/responses/rate-limited-head'
        default: 
          $ref: '#/components/responses/unexpected-error-head'

      security: *snapshotReadSecurity

  /limits/forecast-snapshot/period/{period-start}:
    get:
      operationId: getLimitsForecastByPeriod
      description: >
        Obtain the Limits Forecast the Transmission Provider is currently using in Operations, narrowed in scope
        for a particular period.  
        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/period-start'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/facility-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'        
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units' 
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                  
      responses: *forecastSnapshotReadResponses
    head:
      operationId: getLimitsForecastHeadersByPeriod
      description: >
        Use to obtain the headers that would be returned for 
        `getLimitsForecastByPeriodId`. Useful for cache invalidation.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/period-start'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'       
      responses: *headResponses

      security: *snapshotReadSecurity


  /limits/realtime-snapshot:
    get:
      operationId: getRealTimeLimits
      description: >
        Obtain the System Operating Limits in-use by the Transmission Provider.
        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/facility-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'        
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units' 
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                    
      tags:
        - Operating Snapshots
      responses:
        "200":
          description: >
            The System Operating Limits snapshot is returned.
          content:
            application/vnd.trolie.realtime-limit-set.v1+json:
              schema:
                $ref: '#/components/schemas/realtime-limit-set'       
              example:
                _links:
                  self: 
                    href: /limits/realtime-snapshot
                total-count: 1
                offset: 0
                _embedded:
                  limits:
                  - _links:
                      provenant-proposals:
                      - href: /rating-proposals/realtime/67890
                      transmission-facility:
                        href: /reference-data/transmission-facilities/line2
                        name: line2
                    updated-time: "2023-07-12T13:05:43.044267100-07:00"
                    values: 
                    - type: normal
                      value:
                        mva: 160
                    - type: emergency
                      value:
                        mva: 165
                    - type: loadshed
                      value:
                        mva: 170 
            application/json:
              schema:
                $ref: '#/components/schemas/realtime-limit-set'                      
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *snapshotReadSecurity
    head:
      operationId: getRealTimeLimitsHeaders
      description: >
        Use to obtain the headers that would be returned for `getRealTimeLimits`.
        Useful for cache invalidation.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/facility-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'        
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'         
      responses: *headResponses
      security: *snapshotReadSecurity
  
  /recourse-ratings/snapshot:
    get:
      operationId: getRecourseRatingsSnapshot
      description: Retrieve the nominal and seasonal ratings for all facilities in the `monitoring-set`.
      tags:
        - Recourse Rating Snapshots
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/facility-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'        
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'        
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'              
      responses:
        "200":
          description: OK
          content:
            application/vnd.trolie.recourse-rating-snapshot.v1+json:
              schema:
                $ref: '#/components/schemas/recourse-rating-snapshot'
              example:
                _links:
                  self: 
                    href: /recourse-ratings/snapshot
                total-count: 1
                offset: 0
                _embedded:
                  recourse-ratings:
                  - _links:
                      provenant-proposals:
                      - href: /rating-proposals/recourse/12345
                      transmission-facility:
                        href: /reference-data/transmission-facilities/line2
                        name: line2
                    seasons:
                    - _links:
                        season:
                          name: fall-2023
                          href: /recourse-ratings/season-instances/fall-2023
                      effective-date: "2023-09-01T00:00:00-07:00"
                      values: 
                      - type: normal
                        value:
                          mva: 160
                      - type: emergency
                        value:
                          mva: 165
                      - type: loadshed
                        value:
                          mva: 170   
            application/json:
              schema:
                $ref: '#/components/schemas/recourse-rating-snapshot'                                       
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *snapshotReadSecurity
    head:
      operationId: getResourceRatingsSnapshotHeaders
      description: >
        Use to obtain the headers that would be returned for `getResourceRatingsSnapshot`.
        Useful for cache invalidation.
      tags:
        - Recourse Rating Snapshots
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/facility-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'        
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'         
      responses: *headResponses
      security: *snapshotReadSecurity

  /recourse-ratings/season-instances:
    get:
      operationId: getSeasonInstances
      description: Recourse ratings are always bound against season instances, with effective dates.  
      tags:
        - Recourse Rating Snapshots           
      responses:
        "200":
          description: OK
          content:
            application/vnd.trolie.season-instance-set.v1+json:
              schema:
                $ref: '#/components/schemas/season-instance-set'
              example:
                _links:
                  self: 
                    href: /recourse-ratings/season-instances
                _embedded:
                  seasons:
                  - _links:
                      self:
                        href: /recourse-ratings/season-instances/fall-2023
                      season:
                        href: /reference-data/seasons/fall
                    id: fall-2023
                    effective-time: "2023-09-1T00:00:00-07:00"
                    active: true     
            application/json:
              schema:
                $ref: '#/components/schemas/season-instance-set'                                
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *snapshotReadSecurity
    head:
      operationId: getSeasonInstancesHeaders
      description: >
        Use to obtain the headers that would be returned for `getSeasonInstances`.
        Useful for cache invalidation.
      tags:
        - Recourse Rating Snapshots      
      responses: *headResponses
      security: *snapshotReadSecurity

  /recourse-ratings/season-instances/{id}:
    get:
      operationId: getSeasonInstance
      description: Gets a single season instance.  
      tags:
        - Recourse Rating Snapshots      
      parameters:
      - $ref: '#/components/parameters/id'     
      responses:
        "200":
          description: OK
          content:
            application/vnd.trolie.season-instance.v1+json:
              schema:
                $ref: '#/components/schemas/season-instance'
              example:
                _links:
                  self:
                    href: /recourse-ratings/season-instances/fall-2023
                  season:
                    href: /reference-data/seasons/fall
                id: fall-2023
                effective-time: "2023-09-01T00:00:00-07:00"
                active: true 
            application/json:
              schema:
                $ref: '#/components/schemas/season-instance'                
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "410": *common410
        "429": *common429
        default: *commonDefaultErr
      security: *snapshotReadSecurity


  /rating-proposals/forecasts:
    get:
      operationId: getRatingForecastProposals
      description: >
        Obtain the Ratings Forecasts that *this* Ratings Provider has submitted.  
        Note that the offset-period-start and period-end parameters work in a similar fashion to 
        getLimitsForecastSnapshot, except that it will return any proposal that overlaps with the implied period.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/segment-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'        
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'                 
      responses: &ratingProposalsGetResponse
        "200":
          description: OK
          content:
            application/vnd.trolie.rating-forecast-proposal.v1+json:
              schema:
                $ref: '#/components/schemas/forecast-rating-proposal'
              example:
                _links:
                  self:
                    href: /rating-proposals/forecasts/UTILIXYX
                timestamp: "2023-07-12T15:05:43.044267100-07:00"
                ratings-provider: UTILITYX
                ratings: 
                - _links:
                    segment:
                      href: /reference-data/network-segments/segmentX 
                  segment-id: segmentX
                  periods:
                  - period-start: "2023-07-12T16:00:00-07:00"
                    status: pending
                    values:
                    - type: normal
                      value:
                        mva: 160
                    - type: ste
                      value:
                        mva: 165
                    - type: lte
                      value:
                        mva: 170  
                    - type: dal
                      value:
                        mva: 170 
            application/json:
              schema:
                $ref: '#/components/schemas/forecast-rating-proposal'                                          
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "410": *common410        
        "429": *common429
        default: *commonDefaultErr
      security: &forecastproposalReadSecurity
        - oauth2-primary-flow:
          - "read:forecast-proposals"       
    head:
      operationId: getRatingForecastProposalsHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getRatingForecastProposals`. Useful for cache invalidation.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/segment-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'             
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'        
      responses: *headResponses

      security: *forecastproposalReadSecurity

    patch:
      operationId: patchRatingForecastProposal
      description: >
        Update the logged-in provider's ratings Forecast Proposal 
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'    
      requestBody: &patchForecastRequest
        content:
          application/vnd.trolie.rating-forecast-proposal.v1+json:
            schema:
              $ref: '#/components/schemas/forecast-rating-proposal'   
            example:
              ratings: 
              - segment-id: segmentX
                periods:
                - period-start: "2023-07-12T16:00:00-07:00"
                  values:
                  - type: normal
                    value:
                      mva: 160
                  - type: ste
                    value:
                      mva: 165
                  - type: lte
                    value:
                      mva: 170  
                  - type: dal
                    value:
                      mva: 170       
          application/json:
            schema:
              $ref: '#/components/schemas/forecast-rating-proposal'                                                             
      responses: &patchForecastResponse
        "202": 
          description: >
            The update was accepted for later processing. Updates to 
            ratings may need to undergo additional validation and propagation
            to other systems.  Status may be retreived by 
          content:
            application/vnd.trolie.rating-forecast-proposal.v1+json:
              schema:
                $ref: '#/components/schemas/forecast-rating-proposal'
              example:
                _links:
                  self:
                    href: /rating-proposals/forecasts/UTILITYA
                timestamp: "2023-07-12T15:05:43.044267100-07:00"
                ratings-provider: UTILITYA
                ratings: 
                - _links:
                    segment:
                      href: /reference-data/network-segments/segmentX 
                  segment-id: segmentX
                  periods:
                  - period-start: "2023-07-12T16:00:00-07:00"
                    status: pending
                    values:
                    - type: normal
                      value:
                        mva: 160
                    - type: ste
                      value:
                        mva: 165
                    - type: lte
                      value:
                        mva: 170  
                    - type: dal
                      value:
                        mva: 170 
            application/json:
              schema:
                $ref: '#/components/schemas/forecast-rating-proposal'                                           
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": &submit400
          description: >
            Malformed request, proposal is invalid.  Details are in error messages.  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation-messages'
            application/vnd.trolie.validation-messages.v1+json:
              schema:
                $ref: '#/components/schemas/validation-messages'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "413": &common413
           $ref: '#/components/responses/payload-too-large'
        "429": *common429
        default: *commonDefaultErr   
      security: &forecastWriteSecurity
        - oauth2-primary-flow:
          - "write:forecast-proposals"  

  /rating-proposals/forecasts/{ratings-provider}:
    get:
      operationId: getRatingForecastProposalForProvider
      description: >
        Obtain a specific rating proposal for a ratings provider.  
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/ratings-provider'   
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/segment-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'             
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                      
      responses: *ratingProposalsGetResponse
      security: *forecastproposalReadSecurity
    patch:
      operationId: patchRatingForecastProposalForProvider
      description: >
        Update this rating provider's ratings Forecast Proposal 
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/ratings-provider'         
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'    
      requestBody: *patchForecastRequest
      responses: *patchForecastResponse
      security: *forecastWriteSecurity      

  /rating-proposals/missing/forecasts:
    get:
      operationId: getMissingRatingForecastPeriods
      description: >
        Given an operations window, returns the missing forecasts for segments owned by this ratings provider.  
        If no period-end is provided, then this will default to the configured "required" periods for this
        instance of TROLIE, typically assumed to be the 10-day ahead set of hours required by FERC order 881.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                    
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.missing-forecast-rating-set.v1+json:
              schema:
                $ref: '#/components/schemas/missing-forecast-rating-set'
              example:
                _links:
                  self: 
                    href: /rating-proposals/missing/forecasts
                total-count: 1
                offset: 0
                _embedded:
                  forecasts:
                  - _links:
                      segment:
                        href: /reference-data/network-segments/segmentX
                        name: segmentX
                    periods: 
                    - "2023-07-12T16:00:00-07:00"
            application/json:
              schema:
                $ref: '#/components/schemas/missing-forecast-rating-set'               
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "410": *common410        
        "429": *common429
        default: *commonDefaultErr
      security: *forecastproposalReadSecurity
   
    head:
      operationId: getMissingRatingForecastPeriodsHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getMissingRatingForecastPeriods`. Useful for cache invalidation.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'        
      responses: *headResponses

      security: *forecastproposalReadSecurity

  /rating-proposals/missing/forecasts/{ratings-provider}:
    get:
      operationId: getMissingRatingForecastPeriodsForProvider
      description: >
        Given an operations window, returns the missing forecasts for segments owned by the selected ratings provider.  
        If no period-end is provided, then this will default to the configured "required" periods for this
        instance of TROLIE, typically assumed to be the 10-day ahead set of hours required by FERC order 881.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/ratings-provider'
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                    
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.missing-forecast-rating-set.v1+json:
              schema:
                $ref: '#/components/schemas/missing-forecast-rating-set'
              example:
                _links:
                  self: 
                    href: /rating-proposals/missing/forecasts/providerA
                total-count: 1
                offset: 0
                _embedded:
                  forecasts:
                  - _links:
                      segment:
                        href: /reference-data/network-segments/segmentX
                        name: segmentX
                    periods: 
                    - "2023-07-12T16:00:00-07:00"
            application/json:
              schema:
                $ref: '#/components/schemas/missing-forecast-rating-set'                    

          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "410": *common410        
        "429": *common429
        default: *commonDefaultErr
      security: *forecastproposalReadSecurity
   
    head:
      operationId: getMissingRatingForecastPeriodsForProviderHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getMissingRatingForecastPeriodsForProvider`. Useful for cache invalidation.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/ratings-provider'      
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/period-end'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'        
      responses: *headResponses

      security: *forecastproposalReadSecurity      

  /rating-proposals/realtime:
    get:
      operationId: getRealTimeRatingProposals
      description: >
        Obtain the latest Real-Time Ratings the Ratings Provider has submitted.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/segment-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'             
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                    
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.realtime-rating-proposal-set.v1+json:
              schema:
                $ref: '#/components/schemas/realtime-rating-set'      
              example:
                _links:
                  self: 
                    href: /rating-proposals/realtime
                total-count: 1
                offset: 0
                _embedded:
                  proposals:
                  - _links:
                      self:
                        href: /rating-proposals/realtime/12345
                    id: "12345"
                    timestamp: "2023-07-12T15:05:43.044267100-07:00"
                    submitter: utilityA
                    ratings: 
                    - _links:
                        segment:
                          href: /reference-data/network-segments/segmentX  
                      segment-id: segmentX
                      status: pending
                      values:
                      - type: normal
                        value:
                          mva: 160
                      - type: emergency
                        value:
                          mva: 165
                      - type: loadshed
                        value:
                          mva: 170
            application/json:
              schema:
                $ref: '#/components/schemas/realtime-rating-set'                         
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: &realtimeproposalReadSecurity
        - oauth2-primary-flow:
          - "read:realtime-proposals"       
    head:
      operationId: getRealTimeRatingProposalsHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getRealTimeProposals`. Useful for cache invalidation.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/segment-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'             
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'        
      responses: *headResponses

      security: *realtimeproposalReadSecurity

    post:
      operationId: postRealTimeProposal
      description: >
        Post a new RealTime Rating Proposal 
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'    
      requestBody:
        content:
          application/vnd.trolie.realtime-rating-proposal.v1+json:
            schema:
              $ref: '#/components/schemas/realtime-rating-proposal' 
            example:
              ratings: 
              - segment-id: segmentX
                values:
                - type: normal
                  value:
                    mva: 160
                - type: emergency
                  value:
                    mva: 165
                - type: loadshed
                  value:
                    mva: 170               
          application/json:
            schema:
              $ref: '#/components/schemas/realtime-rating-proposal'
                           
      responses: 
        "202": 
          description: >
            The update was accepted for later processing. Updates to 
            ratings may need to undergo additional validation and propagation
            to other systems.
          content:
            application/vnd.trolie.realtime-proposal.v1+json:
              schema:
                $ref: '#/components/schemas/realtime-rating-proposal'
              example:
                _links:
                  self:
                    href: /rating-proposals/realtime/12345
                id: "12345"
                timestamp: "2023-07-12T15:05:43.044267100-07:00"
                submitter: utilityA
                ratings: 
                - _links:
                    segment:
                      href: /reference-data/network-segments/segmentX
                  segment-id: segmentX
                  status: accepted
                  values:
                  - type: normal
                    value:
                      mva: 160
                  - type: emergency
                    value:
                      mva: 165
                  - type: loadshed
                    value:
                      mva: 170        
            application/json:
              schema:
                $ref: '#/components/schemas/realtime-rating-proposal'                                
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *submit400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "413": *common413        
        "429": *common429
        default: *commonDefaultErr   
      security: 
        - oauth2-primary-flow:
          - "write:realtime-proposals"  

  /rating-proposals/realtime/{proposal-id}:
    get:
      operationId: getRealTimeProposal
      description: >
        Obtain a specific rating proposal by Id.  
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/proposal-id'   
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'                      
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.realtime-rating-proposal.v1+json:
              schema:
                $ref: '#/components/schemas/realtime-rating-proposal'
              example:
                _links:
                  self:
                    href: /rating-proposals/realtime/12345
                id: "12345"
                timestamp: "2023-07-12T15:05:43.044267100-07:00"
                submitter: utilityA
                ratings: 
                - _links:
                    segment:
                      href: /reference-data/network-segments/segmentX
                  segment-id: segmentX
                  status: superseded
                  values:
                  - type: normal
                    value:
                      mva: 160
                  - type: emergency
                    value:
                      mva: 165
                  - type: loadshed
                    value:
                      mva: 170              
            application/json:
              schema:
                $ref: '#/components/schemas/realtime-rating-proposal'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr   
      security: *realtimeproposalReadSecurity

  /rating-proposals/recourse:
    get:
      operationId: getRecourseRatingProposal
      description: >
        Obtain the latest Recourse / Seasonal Ratings the Ratings Provider has submitted.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/segment-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'             
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                    
      responses: &recourseProposalGetResponse
        "200":
          description: OK
          content:
            application/vnd.trolie.recourse-rating-proposal.v1+json:
              schema:
                $ref: '#/components/schemas/recourse-rating-proposal'
              example:
                _links:
                  self:
                    href: /rating-proposals/recourse/UTILITYA
                timestamp: "2023-07-12T15:05:43.044267100-07:00"
                owner: UTILITYA
                ratings: 
                - _links:
                    segment:
                      href: /reference-data/network-segments/segmentX
                      name: segmentX  
                  segment-id: segmentX
                  seasons:
                  - _links:
                      season:
                        href: /reference-data/seasons/fall
                    season-id: fall
                    status: accepted
                    values:
                    - type: normal
                      value:
                        mva: 160
                    - type: ste
                      value:
                        mva: 165
                    - type: lte
                      value:
                        mva: 170  
                    - type: dal
                      value:
                        mva: 170                                 
            application/json:
              schema:
                $ref: '#/components/schemas/recourse-rating-proposal'           
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: &recourseproposalReadSecurity
        - oauth2-primary-flow:
          - "read:recourse-proposals"       
    head:
      operationId: getRecourseRatingProposalsHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getRecourseProposals`. Useful for cache invalidation.
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/segment-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'     
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'    
      responses: *headResponses

      security: *recourseproposalReadSecurity

    patch:
      operationId: patchRecourseProposal
      description: >
        Update this Provider's Rating Proposal 
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'    
      requestBody: &recourseProposalUpdateRequest
        content:
          application/vnd.trolie.recourse-rating-proposal.v1+json:
            schema:
              $ref: '#/components/schemas/recourse-rating-proposal'   
            example:
              ratings: 
              - segment-id: segmentX 
                seasons:
                - season-id: fall
                  values:
                  - type: normal
                    value:
                      mva: 160
                  - type: ste
                    value:
                      mva: 165
                  - type: lte
                    value:
                      mva: 170  
                  - type: dal
                    value:
                      mva: 170 
          application/json:
            schema:
              $ref: '#/components/schemas/recourse-rating-proposal'                                          
      responses: &recourseProposalUpdateResponse
        "202": 
          description: >
            The update was accepted for later processing. Updates to 
            ratings may need to undergo additional validation and propagation
            to other systems.
          content:
            application/vnd.trolie.recourse-proposal.v1+json:
              schema:
                $ref: '#/components/schemas/recourse-rating-proposal'
              example:
                _links:
                  self:
                    href: /rating-proposals/recourse/UTILITYA
                timestamp: "2023-07-12T15:05:43.044267100-07:00"
                owner: UTILITYA
                ratings: 
                - _links:
                    segment:
                      href: /reference-data/network-segments/segmentX
                      name: segmentX  
                  segment-id: segmentX
                  seasons:
                  - _links:
                      season:
                        href: /reference-data/seasons/fall
                    season-id: fall
                    status: accepted
                    values:
                    - type: normal
                      value:
                        mva: 160
                    - type: ste
                      value:
                        mva: 165
                    - type: lte
                      value:
                        mva: 170  
                    - type: dal
                      value:
                        mva: 170  
            application/json:
              schema:
                $ref: '#/components/schemas/recourse-rating-proposal'                                       
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *submit400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "413": *common413        
        "429": *common429
        default: *commonDefaultErr   
      security: &recourseWriteSecurity
        - oauth2-primary-flow:
          - "write:recourse-proposals"  

  /rating-proposals/recourse/{ratings-provider}:
    get:
      operationId: getRecourseProposalForProvider
      description: >
        Obtain a specific rating proposal by ratings provider
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/ratings-provider'   
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/segment-filter'
        - $ref: '#/components/parameters/geographical-region-filter'
        - $ref: '#/components/parameters/subgeographical-region-filter'     
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'                       
      responses: *recourseProposalGetResponse
      security: *recourseproposalReadSecurity
    patch:
      operationId: patchRecourseProposalByProvider
      description: >
        Update a given Provider's Rating Proposal 
      tags:
        - Rating Proposals
      parameters:
        - $ref: '#/components/parameters/ratings-provider'         
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units' 
      requestBody: *recourseProposalUpdateRequest   
      responses: *recourseProposalUpdateResponse
      security: *recourseWriteSecurity
    

  /monitoring-sets:
    get:
      operationId: getMonitoringSets
      description: >
        Obtain the list of monitoring sets visible to this user.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Monitoring Sets
      parameters:
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                    
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.monitoring-set-list.v1+json:
              schema:
                $ref: '#/components/schemas/monitoring-set-list'
              example:
                _links:
                  self:
                    href: /monitoring-sets
                total-count: 1
                offset: 0
                _embedded:
                  monitoring-sets: 
                  - name: utilityA-and-neighbors
                    href: /monitoring-sets/utilityA-and-neighbors
                    
            application/json:
              schema:
                $ref: '#/components/schemas/monitoring-set-list'            
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: &readMonSetSecurity
        - oauth2-primary-flow:
          - "read:monitoring-sets"     

    head:
      operationId: getMonitoringSetsHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getMonitoringSets`. Useful for cache invalidation.
      tags:
        - Monitoring Sets
      parameters:
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'        
      responses: *headResponses

      security: *readMonSetSecurity

    post:
      operationId: createMonitoringSet
      description: >
        Create a new Monitoring Set
      tags:
        - Monitoring Sets
      parameters:
        - $ref: '#/components/parameters/naming-scheme'  
      requestBody:
        content:
          application/vnd.trolie.monitoring-set.v1+json:
            schema:
              $ref: '#/components/schemas/monitoring-set'  
            example:
              _links:
                self:
                  href: /monitoring-sets/utilityA-and-neighbors 
              id: utilityA-and-neighbors   
              description: Utility A's owned lines, as well as surround neighbors. 
              transmission-facilities:
              - name: line1
                href: /reference-data/transmission-facilities/line1 
              - href: /reference-data/transmission-facilities/line2  
              - name: line3             
                href: /reference-data/transmission-facilities/line3
          application/json:
            schema:
              $ref: '#/components/schemas/monitoring-set'
      responses: 
        "201": 
          description: >
            The update was accepted for later processing. Updates to 
            ratings may need to undergo additional validation and propagation
            to other systems.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/monitoring-set'
            application/vnd.trolie.monitoring-set.v1+json:
              schema:
                $ref: '#/components/schemas/monitoring-set'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *submit400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "413": *common413        
        "429": *common429
        default: *commonDefaultErr   
      security: &writeMonSetSecurity
        - oauth2-primary-flow:
          - "write:monitoring-sets"  

  /monitoring-sets/{id}:
    get:
      operationId: getMonitoringSet
      description: >
        Obtain a specific monitoring set by Id.  
      tags:
        - Monitoring Sets
      parameters:
        - $ref: '#/components/parameters/id'   
        - $ref: '#/components/parameters/naming-scheme'                    
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.monitoring-set.v1+json:
              schema:
                $ref: '#/components/schemas/monitoring-set'
              example:
                _links:
                  self:
                    href: /monitoring-sets/utilityA-and-neighbors 
                id: utilityA-and-neighbors   
                description: Utility A's owned lines, as well as surround neighbors. 
                transmission-facilities:
                - name: line1
                  href: /reference-data/transmission-facilities/line1 
                - name: line2
                  href: /reference-data/transmission-facilities/line2  
                - name: line3             
                  href: /reference-data/transmission-facilities/line3
            application/json:
              schema:
                $ref: '#/components/schemas/monitoring-set'                                  
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr   
      security: *writeMonSetSecurity   
    delete:
      operationId: deleteMonitoringSet
      description: >
        Delete a specific monitoring set by Id.  
      tags:
        - Monitoring Sets
      parameters:
        - $ref: '#/components/parameters/id'                      
      responses: 
        "200":
          description: OK
        "304": *common304
        "400": *submit400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr   
      security: *writeMonSetSecurity         
    put:
      operationId: updateMonitoringSet
      description: >
        Updates an existing Monitoring Set
      tags:
        - Monitoring Sets
      parameters:
        - $ref: '#/components/parameters/id'         
        - $ref: '#/components/parameters/naming-scheme'  
      requestBody:
        content:
          application/vnd.trolie.monitoring-set.v1+json:
            schema:
              $ref: '#/components/schemas/monitoring-set'    
            example:
              _links:
                self:
                  href: /monitoring-sets/utilityA-and-neighbors 
              id: utilityA-and-neighbors   
              description: Utility A's owned lines, as well as surround neighbors. 
              transmission-facilities:
              - name: line1
                href: /reference-data/transmission-facilities/line1 
              - href: /reference-data/transmission-facilities/line2  
              - name: line3             
                href: /reference-data/transmission-facilities/line3  
          application/json:
            schema:
              $ref: '#/components/schemas/monitoring-set'                                    
      responses: 
        "200": 
          description: >
            The monitoring set was updated
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *submit400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "413": *common413        
        "429": *common429
        default: *commonDefaultErr   
      security: *writeMonSetSecurity          

  /reference-data/geographical-regions:
    get:
      operationId: getGeographicalRegions
      description: >
        Obtain Geographical Regions referenced in TROLIE.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Reference Data             
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.geographical-region-set.v1+json:
              schema:
                $ref: '#/components/schemas/geographical-region-set'
              example:
                _links:
                  self: 
                    href: /reference-data/geographical-regions
                _embedded:
                  regions:
                  - _links:
                      self:
                        href: /reference-data/geographical-regions/5678
                    id: "5678"
                    name: East
                    effective-time: "2023-09-1T00:00:00-07:00"
                    _embedded:
                      sub-regions:
                      - _links:
                          self:
                            href: /reference-data/sub-geographical-regions/1234
                        id: "1234"
                        name: Nebraska
                        effective-time: "2023-09-1T00:00:00-07:00"
            application/json:
              schema:
                $ref: '#/components/schemas/geographical-region-set'                    

          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: &refReadSecurity
        - oauth2-primary-flow:
          - "read:reference-data"       
    head:
      operationId: getGeographicalRegionsHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getGeographicalRegions`. Useful for cache invalidation.
      tags:
        - Reference Data 
      responses: *headResponses

      security: *refReadSecurity

  /reference-data/geographical-regions/{id}:
    get:
      operationId: getGeographicalRegion
      description: >
        Obtain a specific Geographical region by Id.  
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/id'   
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'                      
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.geographical-region.v1+json:
              schema:
                $ref: '#/components/schemas/geographical-region'
              example:
                _links:
                  self:
                    href: /reference-data/geographical-regions/5678
                id: "5678"
                name: East
                effective-time: "2023-09-01T00:00:00-07:00"
                _embedded:
                  sub-regions:
                  - _links:
                      self:
                        href: /reference-data/sub-geographical-regions/1234
                    id: "1234"
                    name: Nebraska
                    effective-time: "2023-09-01T00:00:00-07:00" 
            application/json:
              schema:
                $ref: '#/components/schemas/geographical-region'                                 
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'      
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr   
      security: *refReadSecurity   

  /reference-data/sub-geographical-regions:
    get:
      operationId: getSubGeographicalRegions
      description: >
        Obtain SubGeographical Regions referenced in TROLIE.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Reference Data             
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.sub-geographical-region-set.v1+json:
              schema:
                $ref: '#/components/schemas/sub-geographical-region-set'
              example:
                _links:
                  self: 
                    href: /reference-data/sub-geographical-regions
                _embedded:
                  regions:
                  - _links:
                      self:
                        href: /reference-data/sub-geographical-regions/5678
                    id: "5678"
                    name: Maine
                    effective-time: "2023-09-01T00:00:00-07:00"             
            application/json:
              schema:
                $ref: '#/components/schemas/sub-geographical-region-set'
 
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *refReadSecurity
   
    head:
      operationId: getSubGeographicalRegionsHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getSubGeographicalRegions`. Useful for cache invalidation.
      tags:
        - Reference Data 
      responses: *headResponses

      security: *refReadSecurity

  /reference-data/sub-geographical-regions/{id}:
    get:
      operationId: getSubGeographicalRegion
      description: >
        Obtain a specific SubGeographical region by Id.  
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/id'   
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'                      
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.sub-geographical-region.v1+json:
              schema:
                $ref: '#/components/schemas/sub-geographical-region'
              example:
                _links:
                  self:
                    href: /reference-data/sub-geographical-regions/5678
                id: "5678"
                name: Maine
                effective-time: "2023-09-01T00:00:00-07:00"     
            application/json:
              schema:
                $ref: '#/components/schemas/sub-geographical-region'                              
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'      
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404  
        "406": *common406
        "429": *common429
        default: *commonDefaultErr   
      security: *refReadSecurity       

  /reference-data/network-segments:
    get:
      operationId: getNetworkSegments
      description: Get network segments in the model with effective dates
      tags:
        - Reference Data    
      parameters:
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'               
      responses:
        "200":
          description: OK
          content:
            application/vnd.trolie.network-segment-set.v1+json:
              schema:
                $ref: '#/components/schemas/network-segment-set'
              example:
                _links:
                  self: 
                    href: /reference-data/network-segments
                _embedded:
                  segments:
                  - _links:
                      self:
                        href: /reference-data/network-segments/Line4North
                    id: Line4North
                    effective-time: "2023-09-01T00:00:00-07:00"                
            application/json:
              schema:
                $ref: '#/components/schemas/network-segment-set'                                      
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *refReadSecurity
    head:
      operationId: getNetworkSegmentsHeaders
      description: >
        Use to obtain the headers that would be returned for `getNetworkSegments`.
        Useful for cache invalidation.
      parameters:
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'            
      tags:
        - Reference Data   
      responses: *headResponses
      security: *refReadSecurity

  /reference-data/network-segments/{id}:
    get:
      operationId: getNetworkSegment
      description: Gets a single segment instance.  
      tags:
        - Reference Data
      parameters:
      - $ref: '#/components/parameters/id'     
      responses:
        "200":
          description: OK
          content:
            application/vnd.trolie.network-segment.v1+json:
              schema:
                $ref: '#/components/schemas/network-segment'
              example:
                _links:
                  self:
                    href: /reference-data/network-segments/Line4North
                id: Line4North
                effective-time: "2023-09-01T00:00:00-07:00"  
            application/json:
              schema:
                $ref: '#/components/schemas/network-segment'                                
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *refReadSecurity      

  /reference-data/transmission-facilities:
    get:
      operationId: getTransmissionFacilities
      description: Get transmission facilities in the model with effective dates
      tags:
        - Reference Data    
      parameters:
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'               
      responses:
        "200":
          description: OK
          content:
            application/vnd.trolie.transmission-facility-set.v1+json:
              schema:
                $ref: '#/components/schemas/transmission-facility-set'
              example:
                _links:
                  self: 
                    href: /reference-data/transmission-facilities
                _embedded:
                  transmission-facilities:
                  - _links:
                      self:
                        href: /reference-data/transmission-facilities/Line4
                    id: Line4
                    effective-time: "2023-09-01T00:00:00-07:00"
                    _embedded:
                      segments:
                      - _links:
                          self:
                            href: /reference-data/transmission-facilities/Line4North
                        id: Line4North
                        effective-time: "2023-09-01T00:00:00-07:00"   
            application/json:
              schema:
                $ref: '#/components/schemas/transmission-facility-set'                                       
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *refReadSecurity
    head:
      operationId: getTransmissionFacilitiesHeaders
      description: >
        Use to obtain the headers that would be returned for `getNetworkTransmissionFacilities`.
        Useful for cache invalidation.
      parameters:
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'            
      tags:
        - Reference Data   
      responses: *headResponses
      security: *refReadSecurity

  /reference-data/transmission-facilities/{id}:
    get:
      operationId: getTransmissionFacility
      description: Gets a single transmission facility instance.  
      tags:
        - Reference Data
      parameters:
      - $ref: '#/components/parameters/id'     
      responses:
        "200":
          description: OK
          content:
            application/vnd.trolie.transmission-facility.v1+json:
              schema:
                $ref: '#/components/schemas/transmission-facility'
              example:
                _links:
                  self:
                    href: /reference-data/transmission-facilities/Line4
                id: Line4
                effective-time: "2023-09-01T00:00:00-07:00"
                _embedded:
                  segments:
                  - _links:
                      self:
                        href: /reference-data/network-segments/Line4North
                    id: Line4North
                    effective-time: "2023-09-01T00:00:00-07:00"   
            application/json:
              schema:
                $ref: '#/components/schemas/transmission-facility'                                  
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *refReadSecurity    
           

  /reference-data/seasons:
    get:
      operationId: getSeasons
      description: >
        Obtain Seasons referenced in TROLIE.  These are assumed to be a relatively 
        static part of configuration.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Reference Data             
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.season-set.v1+json:
              schema:
                $ref: '#/components/schemas/season-set'
              example:
                _links:
                  self: 
                    href: /reference-data/seasons
                _embedded:
                  regions:
                  - _links:
                      self:
                        href: /reference-data/seasons/fall
                    id: fall
                    calendar-season: true
            application/json:
              schema:
                $ref: '#/components/schemas/season-set'                                      
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *refReadSecurity
  

  /reference-data/seasons/{id}:
    get:
      operationId: getSeason
      description: >
        Obtain a specific SubGeographical region by Id.  
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/id'   
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'                      
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.season.v1+json:
              schema:
                $ref: '#/components/schemas/season'
              example:
                _links:
                  self:
                    href: /reference-data/seasons/fall
                id: fall
                calendar-season: true     
            application/json:
              schema:
                $ref: '#/components/schemas/season'                           
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'      
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "404": *common404          
        "406": *common406
        "429": *common429
        default: *commonDefaultErr   
      security: *refReadSecurity

  /reference-data/limit-types:
    get:
      operationId: getLimitTypes
      description: >
        Obtain Limit types referenced in TROLIE.  These are assumed to be a relatively 
        static part of configuration.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Reference Data             
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.limit-type-set.v1+json:
              schema:
                $ref: '#/components/schemas/limit-type-set'
              example:
                _links:
                  self:
                    href: /reference-data/limit-types
                _embedded:
                  types:
                  - id: normal
                    description: Limit for normal operating conditions
                  - id: lte
                    description: Long-term Emergency
                  - id: ste
                    description: Short-term Emergency
                  - id: dal
                    description: Drastic action Limit
            application/json:
              schema:
                $ref: '#/components/schemas/limit-type-set'                                      
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403         
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *refReadSecurity      

  /reference-data/namimg-schemes:
    get:
      operationId: getNamingSchemes
      description: >
        Obtain naming schemes supported in TROLIE.  These are assumed to be a relatively 
        static part of configuration.  

        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Reference Data             
      responses: 
        "200":
          description: OK
          content:
            application/vnd.trolie.naming-scheme-set.v1+json:
              schema:
                $ref: '#/components/schemas/naming-scheme-set'
              example:
                _links:
                  self:
                    href: /reference-data/naming-schemes
                _embedded:
                  naming-schemes:
                  - id: CIM-MRIDs
                    description: CIM Master resource Ids
                  - id: EMS
                    description: Ids of the objects in the EMS system
                  - id: Asset-Reg
                    description: Ids from the asset registration system 
            application/json:
              schema:
                $ref: '#/components/schemas/naming-scheme-set'                                
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'           
            ETag:
              $ref: '#/components/headers/ETag'
        "304": *common304
        "400": *query400
        "401": *common401
        "403": *common403
        "406": *common406
        "429": *common429
        default: *commonDefaultErr
      security: *refReadSecurity           

components:
  parameters:

    id:
      name: id
      description: >
        ID of the associated object
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/generic-identifier' 

    ratings-provider:
      name: ratings-provider
      description: >
        Identifier (typically NERC Id) of a ratings provider.  
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/entity-id'
    period-start:
      name: period-start
      description: >
        Defines the start of an applicable operating period.  
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/period-start'  


    proposal-id:
      name: proposal-id
      description: >
        ID of the associated proposal
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/generic-identifier'  

    max-records:
      name: max-records
      description: >
        Optionally specify a maximum number of records to return in a query operation.  Allows for paged query results.  
      in: query
      required: false
      schema: 
        type: integer
        format: uint16
        example: 1000
    record-offset:
      name: record-offset
      description: >
        Specify an offset for the records returned in a query operation.  Along with max-records, allows for paged query results.  
      in: query
      required: false
      schema:
        type: integer
        example: 2000

    offset-period-start:
      name: offset-period-start
      description: >
        Rather than return the entire forecast from the beginning, i.e., the next
        operating period, instead return a subset of the forecast starting with
        the period starting at `offset-period-start`.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/period-start'
    period-end:
      name: period-end
      description: Specifies the end of a period for which a filter specifies.  Periods will only be returned that start prior to this time.  
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/period-start'
    monitoring-set-filter:
      name: monitoring-set
      description: >
        Only return ratings or limits for facilities of the associated `monitoring-set`
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/generic-identifier'
    facility-filter:
      name: transmission-facility
      description: >
        Only return limits for this transmission facility.  Respects `X-TROLIE-Naming-Scheme` header for looking up name.  
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/generic-identifier'
    segment-filter:
      name: segment
      description: >
        Only return limits for this segment.  Respects `X-TROLIE-Naming-Scheme` header for looking up name.  
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/generic-identifier'     
    geographical-region-filter:
      name: geographical-region
      description: >
        Only return limits or ratings for facilities within this `GeographicalRegion``.    
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/generic-identifier'    
    subgeographical-region-filter:
      name: subgeographical-region
      description: >
        Only return limits or ratings for facilities within this `SubGeographicalRegion`.    
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/generic-identifier'                   

    naming-scheme:
      name: X-TROLIE-Naming-Scheme
      description: |
        Indicates the naming scheme used by this operation.  The names of transmission facilities and segments
        will vary depending on their use.  CIM Master Resource Identifiers (mRIDs) may be used, as well
        as names used by the EMS or other systems.  The list of naming schemes supported, as well as the current default, 
        is a function of the TROLIE implementation.  All names of all facilities are available in the getNetworkSegments and 
        getTransmissionFacilities operations.  The list of all naming conventions and the configured default is available in the 
        getNetworkNamingConventions operation.        
      in: header
      required: false
      schema:
        type: string
        example: CIM-MRIDs

    limit-units:
      name: X-TROLIE-Limit-Units
      description: |
        By default, all limits and ratings are assumed to be in megavolt-amperes (MVA).  However, TROLIE implementations _may_ support 
        alternative units, for both submittal and query, under the following circumstances:

        * Current (amps) may be used if the given segment or transmission facility has a nominal voltage configured in the model.  
          Conversion from/to MVA will be done assuming this nominal voltage.  Submittals in amps for segments without 
          a nominal voltage in amps will return null, and submittals in amps will not be allowed for such segments.  
        * A combination of actual power in megawatts (MW) and an assumed power factor (PF) in MW/MVA.  The MW and PF pairs must be offered together
          in submittals.  Queries for this form will return null for ratings/limits that were not originally submitted in this form.  

        The ability to negotiate limit units in this way is an optional feature of the TROLIE implementation. 
      in: header
      required: false
      schema:
        $ref: '#/components/schemas/limit-units'


  schemas:
    hal-link:
      type: object
      description: Link object in HAL, using a subset of what is defined in https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-08
      properties:
        href:
          description: Path to a resource.  May be absolute, or if starting with / implies that the path is relative to the service root.  
          type: string
          example: /path/to/resource/id12345
        templated:
          description: True if the link is templated with one of the properties.  Missing value implies false.    
          type: boolean
          example: true
        type:
          description: The media type of the link.  This is optional.  
          type: string
          example: application/vnd.trolie.realtime-limit-set.v1+json
        name: 
          type: string
        deprecation:
          description: True if the link is deprecated.  Missing vlaue implies false.  
          type: boolean
          example: true
      required:
        - href
    
    hal-links-block:
      type: object 
      description: Common components of a HAL links block, as described in https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-08
      properties:
        self: 
          $ref: '#/components/schemas/hal-link'
        curies: 
          type: array
          items:
            $ref: '#/components/schemas/hal-link'

    paged-links-block:
      allOf:
      - $ref: '#/components/schemas/hal-links-block'
      - type: object 
        description: Extends the HAL Links block with some additional links for paging.  
        properties:               
          next: 
            $ref: '#/components/schemas/hal-link'
          previous: 
            $ref: '#/components/schemas/hal-link'  

    paged-resource:
      type: object
      description: |
        Common resource definition for paged resources.  Assumes the resource content is included as an
        array in an _embedded block, and a _links section is also declared separately containing any useful references. 
      properties:
        _links: 
          $ref: '#/components/schemas/paged-links-block'      
        total-count:
          description: the total count returned by the query.  
          type: integer
          format: uint16
        offset:
          description: the offset from 0 if this query is beyond the first page.  
          type: integer 
          format: uint16
    
    limit-value-set: 
      type: array
      description: |
        A set of general limit or rating values, each mapped to the various limit bands defined by the Transmission Provider's 
        operating manual.  This typically consists of a "normal" limit, as well as limits for various levels of emergency conditions
        (typically 2-4) defined in the operations manual.  The list of supported limit types may be fetched from getSupportedLimitTypes.  
        The value of the limits are in units as defined by the X-TROLIE-Limit-Units header.  
      items:
        type: object
        properties: 
          type: 
            $ref: '#/components/schemas/limit-type'
          value:
            oneOf:
            - $ref: '#/components/schemas/apparent-power-value'
            - $ref: '#/components/schemas/current-value'
            - $ref: '#/components/schemas/actual-power-and-factor-value'
    
    apparent-power-value:
      type: object
      description: Representation of a limit in megavolt-amperes.  This is the recommended default for limits in TROLIE  
      additionalProperties: false
      properties:
        mva:
          type: number
          format: float
          minimum: 1 # MIN_MVA
          maximum: 10000 # MAX_MVA          

    current-value:
      type: object
      description: Representation of a limit in amps.  Assumes that TROLIE has a nominal voltage in its model.  
      additionalProperties: false
      properties:
        amps:
          type: number
          format: float
          minimum: 1 
          maximum: 100000 

    actual-power-and-factor-value:
      type: object
      description: Representation of a limit using a combination of actual power in MW and an assumed power factor in MVA/MW
      additionalProperties: false
      properties:
        mw:
          type: number
          format: float
          minimum: 1 
          maximum: 10000   
        pf:
          type: number
          format: float
          minimum: 0
          maximum: 1        
                               


    realtime-limit-set:
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              limits:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/realtime-limit-item'

    realtime-limit-item:
      type: object
      properties:
        _links: 
          type: object
          properties:
            provenant-proposals:
              type: array
              items: 
                $ref: "#/components/schemas/hal-link"      
            transmission-facility: 
              $ref: '#/components/schemas/hal-link'      
        updated-time:
          $ref: '#/components/schemas/timestamp'
        values:
          $ref: '#/components/schemas/limit-value-set'




    forecast-limit-set:
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              forecasts:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/forecast-limit-item'

    forecast-limit-item:
      type: object 
      additionalProperties: false
      properties:
        _links: 
          type: object
          properties:
            provenant-proposals:
              type: array
              items: 
                $ref: "#/components/schemas/hal-link"      
            transmission-facility: 
              $ref: '#/components/schemas/hal-link'  
        periods:
          type: array
          items:
            $ref: '#/components/schemas/forecast-limit-period'
          
    
    forecast-limit-period:
      type: object
      additionalProperties: false
      properties: 
        period-start:
          $ref: '#/components/schemas/period-start'
        updated-time:
          $ref: '#/components/schemas/timestamp'
        values:
          $ref: '#/components/schemas/limit-value-set'
        
    recourse-rating-snapshot: 
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              recourse-ratings:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/recourse-rating-snapshot-item'     

    recourse-rating-snapshot-item:
      type: object
      additionalProperties: false
      properties:
        _links: 
          type: object
          properties:
            provenant-proposals:
              type: array
              items: 
                $ref: "#/components/schemas/hal-link"      
            transmission-facility: 
              $ref: '#/components/schemas/hal-link'      
        seasons:
          type: array 
          items:
            $ref: '#/components/schemas/recourse-rating-snapshot-value'
          maxItems: 100
          minItems: 0

    recourse-rating-snapshot-value:
      type: object
      additionalProperties: false
      properties:
        _links:
          type: object
          properties:
            season-instance: 
               $ref: '#/components/schemas/hal-link'
        effective-date:
          $ref: '#/components/schemas/period-start'
        values:
          $ref: '#/components/schemas/limit-value-set'

    season-instance-set: 
      type: object
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        _embedded:
          type: object
          properties:
            forecasts:
              type: array
              minItems: 0
              maxItems: 100 
              items:
                $ref: '#/components/schemas/season-instance'     

    season-instance:
      type: object
      additionalProperties: false
      properties:
        _links:
          allOf:
          - $ref: '#/components/schemas/hal-links-block'
          - type: object
            properties:
              season: 
                $ref: '#/components/schemas/hal-link'
        id: 
          $ref: '#/components/schemas/generic-identifier'
        effective-time: 
          $ref: '#/components/schemas/period-start'
        active:
          description: Set to true if this season is currently active
          type: boolean
      required:
      - _links
      - id
      - active

    immutable-rating-proposal:
      type: object
      description: |
        General type for a ratings proposal that is immutable, such as those created for real-time.  
        This includes fields generated by the system for such submittals.    
        Filling in these fields before posting may be ignored, or result in a 400 error from TROLIE.  
        Properties include:
        * A unique, system generated identifier.  
        * The time the proposal was recieved.  
        * The ratings provider that created the proposal.  
        * If applicable, a link to another proposal that supercedes this proposal, for example on jointly-owned equipment.  
      properties:
        _links: 
          allOf:
          - $ref: '#/components/schemas/hal-links-block'
          - type: object
            properties:   
              superseded-by:  
                $ref: '#/components/schemas/hal-link'
        id: 
          $ref: '#/components/schemas/generic-identifier'   
        timestamp:
          $ref: '#/components/schemas/timestamp' 
        submitter:
          $ref: '#/components/schemas/generic-identifier'

    mutable-rating-proposal:
      type: object
      description: |
        General type for ratings proposal that is mutable over time, such as forecasts and seasonal ratings.  
        Like the immutable proposal, it includes general fields created by the system.  
        Filling in these fields before posting may be ignored, or result in a 400 error from TROLIE.  
        Properties include:
        * The time the proposal was last updated.  
        * The ratings provider that owns the proposal.  For mutable proposals such as those for forecasts or seasonal 
          ratings, the ID of the owning ratings provider is the ID of the proposal itself.  
      properties:
        _links: 
          allOf:
          - $ref: '#/components/schemas/hal-links-block'
          - type: object
            properties:   
              superseded-by:  
                $ref: '#/components/schemas/hal-link'
        last-updated:
          $ref: '#/components/schemas/timestamp' 
        ratings-provider:
          $ref: '#/components/schemas/entity-id'

    

    proposal-status:
      type: string
      description: |
        Enumeration of the possible statuses of a proposal, or parts of a proposal.  Note that submitals of proposals do not
        set this value.  It is system-generated after submission.  The following values are possible:
        * *pending* indicates that the system has not yet processed this proposal.  
        * *accepted* indicates that the proposal has been accepted, and is now the basis for the associated ratings / limit
          snapshot.  
        * *superseded* indicates that the proposal was superseded to a more conservative rating.  This rating may have 
          come from another party, as may be the case on jointly owned equipment or tie lines, or it may have come from a 
          topological condition on the network such that some related equipment is now forcing a more conservative limit.  
        * *overridden* indicates that the proposal was overridden manually by an operator for the Transmission Provider.   
      enum:
        - pending
        - accepted
        - superseded
        - overridden

    

    forecast-rating-proposal:
      allOf:
      - $ref: '#/components/schemas/mutable-rating-proposal'
      - type: object 
        properties:              
          ratings:  
            type: array
            items:
              $ref: '#/components/schemas/forecast-proposal-for-segment'
          
    forecast-proposal-for-segment:
      type: object
      additionalProperties: false
      properties:
        _links: 
          type: object
          properties:   
            segment: 
              $ref: '#/components/schemas/hal-link'    
        segment-id:
          $ref: '#/components/schemas/generic-identifier'
        periods:  
          type: array
          items:
            $ref: '#/components/schemas/forecast-rating-period'                  

    forecast-rating-period:
      type: object
      additionalProperties: false
      properties: 
        period-start:
          $ref: '#/components/schemas/period-start'
        status:
          $ref: '#/components/schemas/proposal-status'         
        values:
          $ref: '#/components/schemas/limit-value-set'

    missing-forecast-rating-set:
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              forecasts:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/missing-forecast-rating-for-segment'

          
    missing-forecast-rating-for-segment:
      type: object
      additionalProperties: false
      properties:
        _links: 
          type: object
          properties:   
            segment: 
              $ref: '#/components/schemas/hal-link'    
        periods:  
          type: array
          items:
            $ref: '#/components/schemas/period-start'           

    realtime-rating-set:
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              proposals:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/realtime-rating-proposal'

    realtime-rating-proposal:
      allOf:
      - $ref: '#/components/schemas/immutable-rating-proposal'
      - type: object 
        properties:         
          ratings:
            type: array
            items:
              $ref: '#/components/schemas/realtime-proposal-for-segment'
          
    
    realtime-proposal-for-segment:
      type: object
      additionalProperties: false
      properties: 
        _links:
          type: object
          properties:
            segment:
              $ref: '#/components/schemas/hal-link'
        segment-id: 
          $ref: '#/components/schemas/generic-identifier'
        status:
          $ref: '#/components/schemas/proposal-status'        
        values:
          $ref: '#/components/schemas/limit-value-set'         
              

    recourse-rating-proposal:
      allOf:
      - $ref: '#/components/schemas/mutable-rating-proposal'
      - type: object 
        properties:            
          ratings:  
            type: array
            items:
              $ref: '#/components/schemas/recourse-proposal-for-segment'
          
    recourse-proposal-for-segment:
      type: object
      additionalProperties: false
      properties:
        _links: 
          type: object
          properties:   
            segment: 
              $ref: '#/components/schemas/hal-link' 
        segment-id: 
          $ref: '#/components/schemas/generic-identifier'   
        seasons:  
          type: array
          items:
            $ref: '#/components/schemas/recourse-proposal-season'                  

    recourse-proposal-season:
      type: object
      additionalProperties: false
      properties: 
        _links: 
          type: object
          properties:   
            season: 
              $ref: '#/components/schemas/hal-link' 
        season-id: 
          $ref: '#/components/schemas/generic-identifier' 
        status:
          $ref: '#/components/schemas/proposal-status' 
        values:
          $ref: '#/components/schemas/limit-value-set'  

    monitoring-set-list:
      description: |
        Paged list of monitoring set links.  Note that monitoring sets themselves are not embedded in the list as they are potentially extremely large objects.  
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              monitoring-sets:
                type: array
                minItems: 0
                maxItems: 2000 
                items:
                  $ref: '#/components/schemas/hal-link'

    monitoring-set:
      description: |
        Set of transmission facilities noteworthy to reference in queries in TROLIE.  
        The set of segments included in the monitoring set is implied by their
        inclusion in the transmission facilities within the monitoring set.  
      type: object
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        id:
          $ref: '#/components/schemas/generic-identifier'   
        description:
          type: string    
        transmission-facilities: 
          type: array
          minItems: 0
          maxItems: 50000
          items:
            $ref: '#/components/schemas/hal-link'
             

    geographical-region-set:
      type: object
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        _embedded:
          type: object
          properties:
            forecasts:
              type: array
              minItems: 0
              maxItems: 100 
              items:
                $ref: '#/components/schemas/geographical-region'

    geographical-region:
      type: object
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        id:
          $ref: '#/components/schemas/generic-identifier'
        name:
          $ref: '#/components/schemas/generic-identifier'          
        effective-time: 
          $ref: '#/components/schemas/period-start'
        _embedded:
          type: object
          properties:
            sub-regions:
              type: array
              minItems: 0
              maxItems: 100 
              items:
                $ref: '#/components/schemas/sub-geographical-region'        

    sub-geographical-region-set:
      type: object
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        _embedded:
          type: object
          properties:
            forecasts:
              type: array
              minItems: 0
              maxItems: 100 
              items:
                $ref: '#/components/schemas/sub-geographical-region'

    sub-geographical-region:
      type: object
      additionalProperties: false
      properties:
        _links:
          allOf:
          - $ref: '#/components/schemas/hal-links-block'
          - type: object
            properties:
              geographical-region:
                $ref: '#/components/schemas/hal-link'
        id:
          $ref: '#/components/schemas/generic-identifier'
        name:
          $ref: '#/components/schemas/generic-identifier'          
        effective-time: 
          $ref: '#/components/schemas/period-start'            
     
    network-component-name:
      type: object
      additionalProperties: false
      properties:
        scheme:
          $ref: '#/components/schemas/generic-identifier'
        name:
          $ref: '#/components/schemas/generic-identifier'
          

    transmission-facility-set:
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              forecasts:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/transmission-facility'

    transmission-facility:
      type: object
      description: |
        A transmission facility is any component of the network that can have a dynamic limit- 
        this is generally lines, but could also include equipment such as transformers.  Transmission facilities generally are composed of segments.  
      additionalProperties: false
      properties:
        _links:
          allOf:
          - $ref: '#/components/schemas/hal-links-block'
          - type: object
            properties:
              sub-geographical-region: 
                $ref: '#/components/schemas/hal-link'
        id:
          $ref: '#/components/schemas/generic-identifier'
        name:
          $ref: '#/components/schemas/generic-identifier'          
        effective-time: 
          $ref: '#/components/schemas/period-start'
        names:
          type: array
          minItems: 1
          maxItems: 100
          items: 
            $ref: '#/components/schemas/network-component-name'
        _embedded:
          type: object
          properties:
            segments:
              type: array
              minItems: 0
              maxItems: 100 
              items:
                $ref: '#/components/schemas/network-segment'    

    network-segment-set:
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        properties:
          _embedded:
            type: object
            properties:
              forecasts:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/network-segment'

    network-segment:
      type: object
      description: |
        A network segment is a component of an transmission facility that may have a rating assigned to it.  
        These are generally line segments, but can really be any piece of equipment on the network that 
        can have a dynamic rating and is potentially limiting to some transmission facility.  
      additionalProperties: false
      properties:
        _links:
          allOf:
          - $ref: '#/components/schemas/hal-links-block'
          - type: object
            properties:
              transmission-facility: 
                $ref: '#/components/schemas/hal-link'
        id:
          $ref: '#/components/schemas/generic-identifier'
        name:
          $ref: '#/components/schemas/generic-identifier'          
        effective-time: 
          $ref: '#/components/schemas/period-start'
        names:
          type: array
          minItems: 1
          maxItems: 100
          items: 
            $ref: '#/components/schemas/network-component-name'                  

    season-set:
      type: object
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        _embedded:
          type: object
          properties:
            forecasts:
              type: array
              minItems: 0
              maxItems: 100 
              items:
                $ref: '#/components/schemas/sub-geographical-region'  

    season:
      type: object
      description: |
        A logical season, which may be a calendar-based season (Spring, Fall etc), or may be a 
        special operating condition, such as "exteme winter day".  Actual ratings are tied to season instances, 
        which tie the season to a specific calendar time.  
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        id:
          $ref: '#/components/schemas/generic-identifier'          
        calendar-season:
          type: boolean
          description: If true, indicates that this is a season that occurs regularly with an effective time.    
          example: true

    limit-type-set:
      type: object
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        _embedded:
          type: object
          properties:
            types:
              type: array
              minItems: 0
              maxItems: 100 
              items:
                type: object
                additionalProperties: false
                properties:
                  id: 
                    $ref: '#/components/schemas/generic-identifier'
                  description:
                    type: string  
                    example: Extreme cold winter day, -100 degrees fahrenheit

    naming-scheme-set:
      type: object
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/hal-links-block'
        _embedded:
          type: object
          properties:
            naming-schemes:
              type: array
              minItems: 0
              maxItems: 100 
              items:
                type: object
                additionalProperties: false
                properties:
                  id: 
                    $ref: '#/components/schemas/generic-identifier'
                  description:
                    type: string   
                    example: Asset registration system identifiers                                            

    validation-messages:
      type: array
      items: 
        $ref: '#/components/schemas/validation-message'


    validation-message:
      type: object
      additionalProperties: false
      properties:
        level:
          type: string
          enum: 
          - warning
          - error
          example: error
        message:
          type: string
          pattern: '^(.){1,500}$'
          maxLength: 500
          example: Data point XXX is out of range

    generic-identifier:
      type: string
      maxLength: 100
      pattern: ^(.){0,100}$
      example: fded654c-64f5-4db9-9467-8937d2b3f027
    hash:
      type: string
      description: >
        A hex encoded hash value as produced by, e.g., SHA512.
      maxLength: 256
      pattern: '^[A-Fa-f0-9\-]{6,256}$'
      example: 8f27c691ded1634cc83491368203c7d2af782d45a7375b49d6e6b042132ee48b9c78fb6a4a274f118a8bd97abe40305e6a0598c694fa5dee6eb70e750fd617e3

    origin-id:
      description: >
        Opaque correlation identifier assigned by the originating system.
      type: string
      maxLength: 50
      pattern: '^(.){1,50}$'
      example: fded654c-64f5-4db9-9467-8937d2b3f027
    entity-id:
      description: Usually the NERC id of the entity.
      type: string
      maxLength: 10
      pattern: ^[A-Z]{3,10}$
      example: 'MISO'

    limit-type:
      description: |
        A type of limit as defined in the Transmission Provider's operating manual, usually indicating specific scenarios 
        under which the limit may be used as well as a maximum period for which the limit may be safely applied.  The supported limit types
        an instance of TROLIE may be introspected via the getSupportedLimitTypes operation.  
      type: string
      maxLength: 20
      pattern: ^[A-Za-z]{3,10}$
      example: 'normal'    
    period-start: 
      description: |
        RFC 3339 date-time string with *no fractional seconds component* that designates an operating period (such as an hour) that
        starts at a specified time. This will frequently be at the start of an hour, but may be finer-grained, such as 
        every 30 minutes, should the Transmission Provider choose.
        If the Transmission Provider is operating in EST, these are
        valid and equivalent values:
        * 2023-01-01T06:00Z
        * 2023-01-01T01:00-5:00
        * 2023-01-01T00:00-6:00
        * 2023-01-01T11:30+5:30

        The server should uniformly represent date-times in the operational time zone of the Transmission Provider.
      type: string
      format: date-time
      maxLength: 25
      pattern: '^([0-9]{4})-([0-9]{2})-([0-9]{2})[Tt]([0-9]{2}):([0-9]{2}):([0-9]{2})([Zz]|([+-])([0-9]{2}):([0-9]{2}))$'
      example: '2025-01-01T03:00:00-05:00'

    timestamp:
      description: RFC 3339 date-time string with a maximum of 10 digits in the fractional seconds component, i.e., nanosecond precision.
      type: string
      format: date-time
      maxLength: 35
      pattern: '^([0-9]{4})-([0-9]{2})-([0-9]{2})[Tt]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]{1,10})?([Zz]|([+-])([0-9]{2}):([0-9]{2}))$'
    limit-units:
      type: string
      enum:
      - mva
      - amps
      - pfmw    
      
    empty:
      description: Intended to proactively avoid information disclosure
      type: string
      nullable: true
      maxLength: 0
      pattern: ^$

  responses:
    unauthorized-head:
      description: Unauthorized
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unauthorized:
      description: Unauthorized
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    forbidden-head:
      description: Access denied
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    forbidden:
      description: Access denied
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'

    no-data-found-head:
      description: No Data Found
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'

    no-data-found:
      description: No Data Found
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'

    rate-limited-head:
      description: Too many requests (rate limiting)
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    rate-limited:
      description: Too many requests (rate limiting)
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    archived:
      description: Gone. The requested forecast may be available in ratings archive.
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
        Location:
          schema:
            description: The URL for the archived forecast
            type: string
            pattern: ^http.*
            maxLength: 2000

    not-acceptable-head:
      description: Not acceptable (content negotiation)
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    not-acceptable:
      description: Not acceptable (content negotiation)
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    payload-too-large:
      description: Payload too large
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unexpected-error-head:
      description: An unexpected error occurred
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unexpected-error:
      description: An unexpected error occurred
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    not-modified:
      description: Not modified
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
        ETag:
          $ref: '#/components/headers/ETag'

  headers:
    X-Rate-Limit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
    X-Rate-Limit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: integer
    X-Rate-Limit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: integer
    ETag:
      description: >
        An opaque, unique identifier for a specific version of a resource. The
        modeled resource state is what is versioned, not the content of any
        particular representation. The server MUST use a strong validator so that
        the same ETag is returned regardless of the media type of the representation.
      schema:
        additionalProperties: false
        anyOf:
          - $ref: '#/components/schemas/hash'
          - $ref: '#/components/schemas/origin-id'
    X-TROLIE-Naming-Scheme:
      description: |
        Indicates the naming scheme used by this operation.  The names of transmission facilities and segments
        will vary depending on their use.  CIM Master Resource Identifiers (mRIDs) may be used, as well
        as names used by the EMS or other systems.  The list of naming schemes supported, as well as the current default, 
        is a function of the TROLIE implementation.  All names of all transmission facilities are available in the getNetworkSegments and 
        getTransmissionFacilities operations.  The list of all naming conventions and the configured default is available in the 
        getNetworkNamingConventions operation.              
      schema:
        type: string    
    X-TROLIE-Limit-Units:
      description: |
        By default, all limits and ratings are assumed to be in megavolt-amperes (MVA).  However, TROLIE implementations _may_ support 
        alternative units, for both submittal and query, under the following circumstances:

        * Current (amps) may be used if the given segment or transmission facility has a nominal voltage configured in the model.  
          Conversion from/to MVA will be done assuming this nominal voltage.  Submittals in amps for segments without 
          a nominal voltage in amps will return null, and submittals in amps will not be allowed for such segments.  
        * A combination of actual power in megawatts (MW) and an assumed power factor (PF) in MW/MVA.  The MW and PF pairs must be offered together
          in submittals.  Queries for this form will return null for ratings/limits that were not originally submitted in this form.  

        The ability to negotiate limit units in this way is an optional feature of the TROLIE implementation.  
      schema:
        $ref: '#/components/schemas/limit-units'

  securitySchemes:
    # Note that other OAuth flows may be allowed.  Here, an OAuth Client credential flow is assumed, and is 
    # recommended for most implementations.  
    oauth2-primary-flow:
      type: oauth2
      flows:
        clientCredentials:
          #The linter errors on the authorizationUrl, incorrectly?
          #authorizationUrl: https://example.com/oauth2
          tokenUrl: https://no-server/oauth2
          scopes:
            "read:forecast-proposals": "Read Forecast rating proposals"
            "read:realtime-proposals": "Read real-time rating proposals"
            "read:recourse-proposals": "Read recourse / seasonal rating proposals"
            "write:forecast-proposals": "Submit forecasted ratings"
            "write:realtime-proposals": "Submit realtime ratings"
            "write:recourse-proposals": "Submit recourse / seasonal ratings"
            "read:monitoring-set": "Read monitoring set definitions"
            "write:monitoring-sets": "Write monitoring set definitions"
            "read:operating-snapshot": "Read the ratings and limits snapshots in-use by the transmission provider"
            "read:reference-data": "Read reference data in the model used by TROLIE"

security:
  - oauth2-primary-flow: []